"use strict";
self["webpackHotUpdatedfe_storybook"]("components-buttons-Button-stories",{

/***/ "./stories/components/buttons/Button.stories.js":
/*!******************************************************!*\
  !*** ./stories/components/buttons/Button.stories.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Primary": () => (/* binding */ Primary),
/* harmony export */   "Secondary": () => (/* binding */ Secondary),
/* harmony export */   "Tertiary": () => (/* binding */ Tertiary),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Button */ "./stories/components/buttons/Button.js");
// import { createButton } from './Button';

// // More on how to set up stories at: https://storybook.js.org/docs/7.0/html/writing-stories/introduction
// export default {
//   title: 'Example/Button',
//   tags: ['autodocs'],
//   render: ({ label, ...args }) => {
//     // You can either use a function to create DOM elements or use a plain html string!
//     // return `<div>${label}</div>`;
//     return createButton({ label, ...args });
//   },
//   argTypes: {
//     backgroundColor: { control: 'color' },
//     label: { control: 'text' },
//     onClick: { action: 'onClick' },
//     primary: { control: 'boolean' },
//     size: {
//       control: { type: 'select' },
//       options: ['small', 'medium', 'large'],
//     },
//   },
// };

// // More on writing stories with args: https://storybook.js.org/docs/7.0/html/writing-stories/args
// export const Primary = {
//   args: {
//     primary: true,
//     label: 'Button',
//   },
// };

// export const Secondary = {
//   args: {
//     label: 'Button',
//   },
// };

// export const Large = {
//   args: {
//     size: 'large',
//     label: 'Button',
//   },
// };

// export const Small = {
//   args: {
//     size: 'small',
//     label: 'Button',
//   },
// };


// More on how to set up stories at: https://storybook.js.org/docs/7.0/html/writing-stories/introduction
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Example/Button',
  tags: ['autodocs'],
  parameters: {
    layout: "left"
  },
  render: ({
    label,
    ...args
  }) => {
    // You can either use a function to create DOM elements or use a plain html string!
    // return `<div>${label}</div>`;
    return (0,_Button__WEBPACK_IMPORTED_MODULE_0__.createButton)({
      label,
      ...args
    });
  },
  argTypes: {
    showIcon: {
      type: 'boolean'
    },
    buttonType: {
      control: {
        type: 'select'
      },
      options: ['Primary', 'Secondary', 'Tertiary']
    }
  }
});

// More on writing stories with args: https://storybook.js.org/docs/7.0/html/writing-stories/args
const Primary = {
  args: {
    showIcon: false,
    buttonType: 'Primary'
  }
};
const Secondary = {
  args: {
    buttonType: 'Secondary'
  }
};
const Tertiary = {
  args: {
    buttonType: 'Tertiary'
  }
};
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    showIcon: false,\n    buttonType: 'Primary'\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    buttonType: 'Secondary'\n  }\n}",
      ...Secondary.parameters?.docs?.source
    }
  }
};
Tertiary.parameters = {
  ...Tertiary.parameters,
  docs: {
    ...Tertiary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    buttonType: 'Tertiary'\n  }\n}",
      ...Tertiary.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Primary", "Secondary", "Tertiary"];

/***/ }),

/***/ "./stories/components/buttons/Button.js":
/*!**********************************************!*\
  !*** ./stories/components/buttons/Button.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "createButton": () => (/* binding */ createButton)
/* harmony export */ });
Object(function webpackMissingModule() { var e = new Error("Cannot find module './buttons.css'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
// import './button.css';

// export const createButton = ({
//   primary = false,
//   size = 'medium',
//   backgroundColor,
//   label,
//   onClick,
// }) => {
//   const btn = document.createElement('button');
//   btn.type = 'button';
//   btn.innerText = label;
//   btn.addEventListener('click', onClick);

//   const mode = primary ? 'storybook-button--primary' : 'storybook-button--secondary';
//   btn.className = ['storybook-button', `storybook-button--${size}`, mode].join(' ');

//   btn.style.backgroundColor = backgroundColor;

//   return btn;
// };


const createButton = ({
  buttonType = 'Primary',
  showIcon = false,
  onClick
}) => {
  const btn = document.createElement('button');
  btn.type = 'button';
  btn.innerText = buttonType + ' Button';
  btn.addEventListener('click', onClick);
  btn.className = ['btn', `btn-${buttonType.toLowerCase()}`].join(' ');
  if (showIcon) {
    btn.innerHTML = buttonType + ' Button <i class="fa-regular fa-image"></i>';
  }
  return btn;
};

/***/ })

});
//# sourceMappingURL=components-buttons-Button-stories.cebdfff61dfee3f3dd05.hot-update.js.map