"use strict";
self["webpackHotUpdatedfe_storybook"]("components-buttons-Button-stories",{

/***/ "./stories/components/buttons/Button.stories.js":
/*!******************************************************!*\
  !*** ./stories/components/buttons/Button.stories.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Large": () => (/* binding */ Large),
/* harmony export */   "Primary": () => (/* binding */ Primary),
/* harmony export */   "Secondary": () => (/* binding */ Secondary),
/* harmony export */   "Small": () => (/* binding */ Small),
/* harmony export */   "__namedExportsOrder": () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Button */ "./stories/components/buttons/Button.js");


// More on how to set up stories at: https://storybook.js.org/docs/7.0/html/writing-stories/introduction
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Example/Button',
  tags: ['autodocs'],
  render: ({
    label,
    ...args
  }) => {
    // You can either use a function to create DOM elements or use a plain html string!
    // return `<div>${label}</div>`;
    return (0,_Button__WEBPACK_IMPORTED_MODULE_0__.createButton)({
      label,
      ...args
    });
  },
  argTypes: {
    // backgroundColor: { control: 'color' },
    // label: { control: 'text' },
    // onClick: { action: 'onClick' },
    // primary: { control: 'boolean' },
    // size: {
    //   // control: { type: 'select' },
    //   // options: ['small', 'medium', 'large'],
    // },
  }
});

// More on writing stories with args: https://storybook.js.org/docs/7.0/html/writing-stories/args
const Primary = {
  args: {
    primary: true,
    label: 'Button'
  }
};
const Secondary = {
  args: {
    label: 'Button'
  }
};
const Large = {
  args: {
    size: 'large',
    label: 'Button'
  }
};
const Small = {
  args: {
    size: 'small',
    label: 'Button'
  }
};

// import { createButton } from './Button';

// // More on how to set up stories at: https://storybook.js.org/docs/7.0/html/writing-stories/introduction
// export default {
//   title: 'Example/Button',
//   tags: ['autodocs'],
//   render: ({ label, ...args }) => {
//     // You can either use a function to create DOM elements or use a plain html string!
//     // return `<div>${label}</div>`;
//     return createButton({ label, ...args });
//   },
//   argTypes: {
//     showIcon: { type: 'boolean' },
//     buttonType: {
//       control: { type: 'select' },
//       options: ['Primary', 'Secondary', 'Tertiary'],
//     },
//   },
// };

// // More on writing stories with args: https://storybook.js.org/docs/7.0/html/writing-stories/args
// export const Primary = {
//   args: {
//     showIcon: false,
//     buttonType: 'Primary',
//   },
// };

// export const Secondary = {
//   args: {
//     buttonType: 'Secondary',
//   },
// };

// export const Tertiary = {
//   args: {
//     buttonType: 'Tertiary',
//   },
// };
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    primary: true,\n    label: 'Button'\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
Secondary.parameters = {
  ...Secondary.parameters,
  docs: {
    ...Secondary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Button'\n  }\n}",
      ...Secondary.parameters?.docs?.source
    }
  }
};
Large.parameters = {
  ...Large.parameters,
  docs: {
    ...Large.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: 'large',\n    label: 'Button'\n  }\n}",
      ...Large.parameters?.docs?.source
    }
  }
};
Small.parameters = {
  ...Small.parameters,
  docs: {
    ...Small.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    size: 'small',\n    label: 'Button'\n  }\n}",
      ...Small.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Primary", "Secondary", "Large", "Small"];

/***/ })

});
//# sourceMappingURL=components-buttons-Button-stories.570a9a1cc8d12d0c9442.hot-update.js.map